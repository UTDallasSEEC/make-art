#!/usr/bin/kano-splash /usr/share/kano-draw/media/splash.png /usr/bin/env python

# kano-draw
#
# Copyright (C) 2014 Kano Computing Ltd.
# License: http://www.gnu.org/licenses/gpl-2.0.txt GNU General Public License v2
#
# The Draw App implementation
#

# Before loading anything else, declare a profiling timepoint
from kano.profiling import declare_timepoint
declare_timepoint("load",True)

import os
import sys
import multiprocessing
import signal

if __name__ == '__main__' and __package__ is None:
    DIR_PATH = os.path.abspath(os.path.join(os.path.dirname(__file__), '..'))

    if not DIR_PATH.startswith('/usr'):
        sys.path.insert(1, DIR_PATH)

from kano_profile.tracker import Tracker
kanotracker = Tracker()

from kano_draw.video import play_intro
from kano_draw.draw import Draw
import kano_draw.server
#set default number to 0
#FILE='{"level":999,"save_date":"2015-07-08T08:13:38.4508
#echo -e "{"level":999,"save_date":"2015-07-08T08:13:38.450890"}" /home/seec/.kanoprofile/apps/kano-draw/state.json
def cleanup(signum, frame):
    sys.exit(0)

signal.signal(signal.SIGINT, cleanup)

play_intro()
#increment counter
with open(r'/var/stats/artstats.txt','r+')as f:
	value=int(f.read())
	f.seek(0)
	f.write(str(value+1))

APP_PID = os.getpid()
# Initialise the local server
SERVER_PROC = multiprocessing.Process(target=kano_draw.server.start,
                                      kwargs={
                                          'parent_pid': APP_PID
                                      })
SERVER_PROC.daemon = True
SERVER_PROC.start()

# Init the web app
if len(sys.argv) > 1:
    DRAW = Draw(load_path=sys.argv[1])
else:
    DRAW = Draw()
DRAW.run()
